security:
  encoders:
    App\Entity\User: sha1

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    db_provider:
      entity:
        class: App\Entity\User
        property: username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      provider: db_provider
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      anonymous: true
      stateless: true
      
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

    main:
      anonymous: ~
      pattern: ^/
      form_login:
        login_path: login
        check_path: login
        default_target_path: login
        always_use_default_target_path: true
      logout:
        path:   /logout
        target: /login
        invalidate_session: true     

    refresh:
      pattern: ^/api/token/refresh
      stateless: true
      anonymous: true

    apidoc:
      pattern: ^/api/docs
      stateless: false
      anonymous: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/, role: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/login, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    # - { path: ^/profile, roles: ROLE_USER }
  role_hierarchy:
    ROLE_WRITER : 0,
    ROLE_MARKETING_MANAGER: [0,4]
    ROLE_SALES_MANAGER: [0,3,4]
    ROLE_COURSE_MANGER: [0,2,3,4]
    ROLE_ADMIN: [0,1,2,3,4]

fs_solr:
  endpoints:
    core2:
      scheme: http
      host: localhost
      port: 8983
      path: /solr/
      core: salisa
      timeout: 5